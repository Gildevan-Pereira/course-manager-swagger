openapi: 3.0.1
info:
  title: Course Manager - API
  description: API de Gerenciamento de Cursos
  version: 1.0.0
servers:
- url: http://localhost

tags: 
  - name: Student-Controller
  - name: Course-Controller
  - name: Enrollment-Controller

paths:
  /students:
    post:
      tags:
      - Student-Controller
      operationId: createStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentRequestDto"
        required: true
      responses:
        "201":
          description: CREATED
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StudentResponseDto"
  /enrollments:
    post:
      tags:
      - Enrollment-Controller
      operationId: createEnrollment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnrollmentRequestDto"
        required: true
      responses:
        "201":
          description: CREATED
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EnrollmentResponseDto"
  /courses:
    post:
      tags:
      - Course-Controller
      operationId: createCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseRequestDto"
        required: true
      responses:
        "201":
          description: CREATED
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseResponseDto"
  /students/{studentId}/courses:
    get:
      tags:
      - Student-Controller
      operationId: getCoursesByStudentId
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
          example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CourseResponseDto"
        "404":
          description: NOT_FOUND
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorResponseDto2"
        "500":
          description: INTERNAL_SERVER_ERROR
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorResponseDto3"
  /courses/{courseId}/students:
    get:
      tags:
      - Course-Controller
      operationId: getStudentsByCourseId
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
          example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentResponseDto"
        "404":
          description: NOT_FOUND
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorResponseDto1"
        "500":
          description: INTERNAL_SERVER_ERROR
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorResponseDto3"
components:
  schemas:
    StudentRequestDto:
      type: object
      properties:
        name:
          type: string
          example: 'John Doe'
        description:
          type: string
          example: 'Estudante de Tecnologia'
        creationDate:
          type: string
          format: date-time
          example: '2024-11-14T14:15:41'
    StudentResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: 'John Doe'
        description:
          type: string
          example: 'Estudante de Tecnologia'
        creationDate:
          type: string
          format: date-time
          example: '2024-11-14T14:15:41'
    EnrollmentRequestDto:
      type: object
      properties:
        studentId:
          type: integer
          format: int32
          example: 1
        courseId:
          type: integer
          format: int32
          example: 1
        registrationDate:
          type: string
          format: date-time
          example: '2024-11-14T14:15:41'
    EnrollmentResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        registrationDate:
          type: string
          format: date-time
          example: '2024-11-14T14:15:41'
    CourseRequestDto:
      type: object
      properties:
        name:
          type: string
          example: 'John Doe'
        description:
          type: string
          example: 'Estudante de Tecnologia'
        creationDate:
          type: string
          format: date-time
          example: '2024-11-14T14:15:41'
    CourseResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: 'Java Spring Boot'
        description:
          type: string
          example: 'Curso de Tecnologia'
        creationDate:
          type: string
          format: date-time
          example: '2024-11-14T14:15:41'
    
    ErrorResponseDto1:
        type: object
        properties:
          errors:
            type: array
            description: Lista de errors
            items: 
              $ref: '#/components/schemas/ErrorDto1'
              
    ErrorDto1:
      type: object
      properties: 
        code:
          type: integer
          description: Código de erro da mensagem
          example: '0100'
        message:
          type: string
          description: mensagem de erro
          example: 'Courses not found for id: 1'

    ErrorResponseDto2:
        type: object
        properties:
          errors:
            type: array
            description: Lista de errors
            items: 
              $ref: '#/components/schemas/ErrorDto2'
              
    ErrorDto2:
      type: object
      properties: 
        code:
          type: integer
          description: Código de erro da mensagem
          example: '0101'
        message:
          type: string
          description: mensagem de erro
          example: 'Student not found for id: 1'
    
    ErrorResponseDto3:
        type: object
        properties:
          errors:
            type: array
            description: Lista de errors
            items: 
              $ref: '#/components/schemas/ErrorDto3'
              
    ErrorDto3:
      type: object
      properties: 
        code:
          type: integer
          description: Código de erro da mensagem
          example: '0001'
        message:
          type: string
          description: mensagem de erro
          example: 'An error has occurred'